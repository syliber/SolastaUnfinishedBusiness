<Project Sdk="Microsoft.NET.Sdk" InitialTargets="CheckEnvironmentVars">

  <PropertyGroup>
    <LangVersion>10</LangVersion>
    <TargetFramework>net472</TargetFramework>
    <AssemblyVersion>1.5.46.4</AssemblyVersion>
    <RepositoryUrl>https://github.com/SolastaMods/SolastaUnfinishedBusiness</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <Configurations>Debug Install;Release Install</Configurations>
    <EnforceCodeStyleInBuild>True</EnforceCodeStyleInBuild>
    <EnableNETAnalyzers>True</EnableNETAnalyzers>
    <AnalysisLevel>latest</AnalysisLevel>
    <NeutralLanguage>en-US</NeutralLanguage>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <IsPackable>false</IsPackable>
    <RunPostBuildEvent>Always</RunPostBuildEvent>
    <Platforms>AnyCPU</Platforms>
  </PropertyGroup>

  <Target Name="CheckEnvironmentVars">
    <Error Text="Please set the SolastaInstallDir environment variable." Condition="'$(SolastaInstallDir)' == ''" ContinueOnError="false" />
  </Target>

  <Target Name="Publicise" AfterTargets="Clean">
    <ItemGroup>
      <PubliciseInputAssemblies Include="$(SolastaInstallDir)/Solasta_Data/Managed/Assembly-CSharp.dll" />
    </ItemGroup>
    <Publicise AssemblyPath="@(PubliciseInputAssemblies)" OutputPath="$(SolutionDir)lib/" />
  </Target>

  <ItemGroup>
    <PackageReference Include="Publicise.MSBuild.Task" Version="1.6.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <PropertyGroup>
    <OutputPath>$(SolastaInstallDir)/Mods/SolastaUnfinishedBusiness/</OutputPath>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug Install|AnyCPU'">
    <Optimize>false</Optimize>
    <DefineConstants>$(DefineConstants);DEBUG</DefineConstants>
    <PlatformTarget>x64</PlatformTarget>
    <DebugType>full</DebugType>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release Install|AnyCPU'">
    <Optimize>true</Optimize>
    <DefineConstants>$(DefineConstants);RELEASE</DefineConstants>
    <PlatformTarget>x64</PlatformTarget>
    <DebugType>portable</DebugType>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.Memory" Version="4.5.5" />
    <Reference Include="System.IO.Compression" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="0Harmony">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/UnityModManager/0Harmony.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityModManager">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/UnityModManager/UnityModManager.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityExplorer.STANDALONE.Mono">
      <HintPath>../lib/UnityExplorer.STANDALONE.Mono.dll</HintPath>
    </Reference>
    <Reference Include="UniverseLib.Mono">
      <HintPath>../lib/UniverseLib.Mono.dll</HintPath>
    </Reference>
    <Reference Include="mcs">
      <HintPath>../lib/mcs.dll</HintPath>
    </Reference>
    <Reference Include="Mono.Cecil">
      <HintPath>../lib/Mono.Cecil.dll</HintPath>
    </Reference>
    <Reference Include="Mono.Cecil.Mdb">
      <HintPath>../lib/Mono.Cecil.Mdb.dll</HintPath>
    </Reference>
    <Reference Include="Mono.Cecil.Pdb">
      <HintPath>../lib/Mono.Cecil.Pdb.dll</HintPath>
    </Reference>
    <Reference Include="Mono.Cecil.Rocks">
      <HintPath>../lib/Mono.Cecil.Rocks.dll</HintPath>
    </Reference>
    <Reference Include="MonoMod.RuntimeDetour">
      <HintPath>../lib/MonoMod.RuntimeDetour.dll</HintPath>
    </Reference>
    <Reference Include="MonoMod.Utils">
      <HintPath>../lib/MonoMod.Utils.dll</HintPath>
    </Reference>
    <Reference Include="Tomlet">
      <HintPath>../lib/Tomlet.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Assembly-CSharp">
      <HintPath>$(SolutionDir)lib/Assembly-CSharp_public.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Newtonsoft.Json">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/Newtonsoft.Json.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/UnityEngine.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Unity.Addressables">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/Unity.Addressables.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Unity.InputSystem">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/Unity.InputSystem.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.AssetBundleModule">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/UnityEngine.AssetBundleModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/UnityEngine.CoreModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.ImageConversionModule">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/UnityEngine.ImageConversionModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.IMGUIModule">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/UnityEngine.IMGUIModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.InputLegacyModule">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/UnityEngine.InputLegacyModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.InputModule">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/UnityEngine.InputModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Unity.Unity.ResourceManager">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/Unity.ResourceManager.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.TextRenderingModule">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/UnityEngine.TextRenderingModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.Timeline">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/Unity.Timeline.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/UnityEngine.UI.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.UIModule">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/UnityEngine.UIModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.PhysicsModule">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/UnityEngine.PhysicsModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Unity.Postprocessing.Runtime">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/Unity.Postprocessing.Runtime.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.TerrainModule">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/UnityEngine.TerrainModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Unity.TextMeshPro">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/Unity.TextMeshPro.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Ak.Wwise.Api.WAAPI.dll">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/Ak.Wwise.Api.WAAPI.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="AK.Wwise.Unity.API.dll">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/AK.Wwise.Unity.API.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="AK.Wwise.Unity.API.WwiseTypes.dll">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/AK.Wwise.Unity.API.WwiseTypes.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="AK.Wwise.Unity.MonoBehaviour.dll">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/AK.Wwise.Unity.MonoBehaviour.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="AK.Wwise.Unity.Timeline.dll">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/AK.Wwise.Unity.Timeline.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Aura2_Core.dll">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/Aura2_Core.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="AwesomeTechnologies.VegetationStudioPro.Runtime">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/AwesomeTechnologies.VegetationStudioPro.Runtime.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="I2">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/I2.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="PhotonUnityNetworking">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/PhotonUnityNetworking.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="PhotonRealtime">
      <HintPath>$(SolastaInstallDir)/Solasta_Data/Managed/PhotonRealtime.dll</HintPath>
      <Private>False</Private>
    </Reference>
  </ItemGroup>

  <Target Name="ZipTranslations" BeforeTargets="Compile"> <!-- Condition="'$(Configuration)|$(Platform)' == 'Debug|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Debug Install|AnyCPU'"> -->
    <ZipDirectory Overwrite="true" SourceDirectory="$(ProjectDir)/Translations/" DestinationFile="$(ProjectDir)/Resources/Translations.zip" />
  </Target>

  <ItemGroup Condition="('$(Configuration)|$(Platform)' == 'Release|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Release Install|AnyCPU')">
    <Compile Remove="Api/DatabaseHelper.cs" />
  </ItemGroup>

  <ItemGroup Condition="('$(Configuration)|$(Platform)' == 'Debug|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Debug Install|AnyCPU')">
    <Compile Remove="Api/DatabaseHelper-RELEASE.cs" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Properties/Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Properties/Resources.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <None Update="ChangelogHistory.txt">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Info.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Settings\**\*.*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="UnofficialTranslations\**\*.*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
</Project>